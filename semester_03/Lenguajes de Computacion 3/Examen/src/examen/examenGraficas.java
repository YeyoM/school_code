/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package examen;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.TextAnchor;

/**
 *
 * @author Usuario
 */
public class examenGraficas extends javax.swing.JFrame {
    
    int[] salarioMujeresEstado1  = new int[2];
    int[] salarioMujeresEstado24 = new int[2];
    int[] salarioMujeresEstado32 = new int[2];
    int[] salarioHombresEstado1  = new int[2];
    int[] salarioHombresEstado24 = new int[2];
    int[] salarioHombresEstado32 = new int[2];
    
    int[] temporal = new int[4];

    /**
     * Creates new form examenGraficas
     */
    public examenGraficas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        displayDatos = new javax.swing.JTextArea();
        leerBtn = new javax.swing.JButton();
        organizarBtn = new javax.swing.JButton();
        generarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayDatos.setColumns(20);
        displayDatos.setRows(5);
        jScrollPane1.setViewportView(displayDatos);

        leerBtn.setText("Leer Datos");
        leerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerBtnActionPerformed(evt);
            }
        });

        organizarBtn.setText("Organizar Datos");
        organizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizarBtnActionPerformed(evt);
            }
        });

        generarBtn.setText("Generar Gr√°fica");
        generarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(organizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(organizarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerBtnActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser open = new JFileChooser();
            int option = open.showOpenDialog(this);
            File f1 = new File(open.getSelectedFile().getPath());
            try (FileReader fr = new FileReader(f1)) {
                BufferedReader br = new BufferedReader(fr);
                String s;
                while((s=br.readLine())!=null) {
                    displayDatos.append(s + "\n");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(examenGraficas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(examenGraficas.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch(HeadlessException ae) {
            System.out.println(ae);
        }
    }//GEN-LAST:event_leerBtnActionPerformed

    private void organizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizarBtnActionPerformed
        // TODO add your handling code here:
        String datos = displayDatos.getText();
        // System.out.println(datos);
        StringTokenizer st = new StringTokenizer(datos, "\n");
        String hombre = (char)34 + "H" + (char)34;
        String mujer = (char)34 + "M" + (char)34;
        String estado1 = "1";
        String estado24 = "24";
        String estado32 = "32";
        String estado = null;
        String sexo = null;
        
        while(st.hasMoreTokens()) {
            StringTokenizer st2 = new StringTokenizer(st.nextToken(), ",");
            while(st2.hasMoreTokens()) {
                String actual = st2.nextToken();
                if (actual.equals(hombre)) {
                    sexo = actual;
                    estado = st2.nextToken();
                } else if (actual.equals(mujer)) {
                    sexo = actual;
                    estado = st2.nextToken();
                } else {
                    if (sexo.equals(mujer) && estado.equals(estado1)) {
                        salarioMujeresEstado1[0] += Integer.parseInt(actual);
                        salarioMujeresEstado1[1] += 1;
                    } else if (sexo.equals(mujer) && estado.equals(estado24)) {
                        salarioMujeresEstado24[0] += Integer.parseInt(actual);
                        salarioMujeresEstado24[1] += 1;
                    } else if (sexo.equals(mujer) && estado.equals(estado32)) {
                        salarioMujeresEstado32[0] += Integer.parseInt(actual);
                        salarioMujeresEstado32[1] += 1;
                    } else if (sexo.equals(hombre) && estado.equals(estado1)) {
                        salarioHombresEstado1[0] += Integer.parseInt(actual);
                        salarioHombresEstado1[1] += 1;
                    } else if (sexo.equals(hombre) && estado.equals(estado24)) {
                        salarioHombresEstado24[0] += Integer.parseInt(actual);
                        salarioHombresEstado24[1] += 1;
                    } else if (sexo.equals(hombre) && estado.equals(estado32)) {
                        salarioHombresEstado32[0] += Integer.parseInt(actual);
                        salarioHombresEstado32[1] += 1;
                    }
                }
            }
        }    
    }//GEN-LAST:event_organizarBtnActionPerformed

    private void generarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarBtnActionPerformed
        // TODO add your handling code here:

        CategoryDataset dataset = createDataset();  
        JFreeChart chart = ChartFactory.createBarChart(  
            "Salarios entre hombres y mujeres por estados", //Chart Title  
            "", // Category axis  
            "Salario promedio en MXN", // Value axis  
            dataset,  
            PlotOrientation.VERTICAL,  
            true,true,false  
        );
        
        CategoryItemRenderer renderer = ((CategoryPlot)chart.getPlot()).getRenderer();
        renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());
        renderer.setBaseItemLabelsVisible(true);
        ItemLabelPosition position = new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12, 
                TextAnchor.TOP_CENTER);
        renderer.setBasePositiveItemLabelPosition(position);
        
      
        JFrame frame = new JFrame("Salarios entre hombres y mujeres por estados");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.add(new ChartPanel(chart));
        frame.setLocationByPlatform(true);
        frame.pack();
        frame.setVisible(true); 
    }//GEN-LAST:event_generarBtnActionPerformed

    private CategoryDataset createDataset() {  
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();  
      
        double promedioMujeres1;
        promedioMujeres1 = Double.valueOf(salarioMujeresEstado1[0])  / Double.valueOf(salarioMujeresEstado1[1]);
        double promedioMujeres24;
        promedioMujeres24 = Double.valueOf(salarioMujeresEstado24[0]) / Double.valueOf(salarioMujeresEstado24[1]);
        double promedioMujeres32;
        promedioMujeres32 = Double.valueOf(salarioMujeresEstado32[0]) / Double.valueOf(salarioMujeresEstado32[1]);
        double promedioHombres1;
        promedioHombres1 = Double.valueOf(salarioHombresEstado1[0])  / Double.valueOf(salarioHombresEstado1[1]);
        double promedioHombres24;
        promedioHombres24 = Double.valueOf(salarioHombresEstado24[0]) / Double.valueOf(salarioHombresEstado24[1]);
        double promedioHombres32;
        promedioHombres32 = Double.valueOf(salarioHombresEstado32[0]) / Double.valueOf(salarioHombresEstado32[1]);

        
        // Estado 1
        dataset.addValue(promedioMujeres1, "Mujeres", "Estado 1");  
        dataset.addValue(promedioHombres1, "Hombres", "Estado 1");  
      
        // Estado 24
        dataset.addValue(promedioMujeres24, "Mujeres", "Estado 24");  
        dataset.addValue(promedioHombres24, "Hombres", "Estado 24");  
      
        // Estado 32 
        dataset.addValue(promedioMujeres32, "Mujeres", "Estado 32");  
        dataset.addValue(promedioHombres32, "Hombres", "Estado 32");  
      
        return dataset;  
    }  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(examenGraficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(examenGraficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(examenGraficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(examenGraficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new examenGraficas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea displayDatos;
    private javax.swing.JButton generarBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leerBtn;
    private javax.swing.JButton organizarBtn;
    // End of variables declaration//GEN-END:variables
}
