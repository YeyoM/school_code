/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package minimaple;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.StringTokenizer;
import org.apache.commons.lang3.math.Fraction;

/**
 *
 * @author Usuario
 */
public class MiniMapleUI extends javax.swing.JFrame {

    ArrayList<ArrayList<Fraction>> matriz = new ArrayList<>();
    Integer filas = 0;
    Integer columnas = 0;
    
    /**
     * Creates new form MiniMapleUI
     */
    public MiniMapleUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayMatriz = new javax.swing.JTextArea();
        fraccionInput2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        renglonInput1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        operacionInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        renglonInput2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        renglonInput3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fraccInput1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        operarBtn1 = new javax.swing.JButton();
        guardarBtn = new javax.swing.JButton();
        filasInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        columnasInput = new javax.swing.JTextField();
        inicializarBtn = new javax.swing.JToggleButton();
        operarBtn2 = new javax.swing.JButton();
        fraccionInput3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        renglonInput4 = new javax.swing.JTextField();
        renglonInput5 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayMatriz.setColumns(20);
        displayMatriz.setRows(5);
        jScrollPane1.setViewportView(displayMatriz);

        fraccionInput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fraccionInput2ActionPerformed(evt);
            }
        });

        jLabel1.setText("a / b");

        jLabel2.setText("Rn");

        jLabel3.setText("+/-");

        jLabel4.setText("Rn       ->");

        jLabel5.setText("Rn");

        fraccInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fraccInput1ActionPerformed(evt);
            }
        });

        jLabel6.setText("a / b");

        operarBtn1.setText("Operar");
        operarBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operarBtn1ActionPerformed(evt);
            }
        });

        guardarBtn.setText("Guardar en Matriz");
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Filas");

        jLabel8.setText("Columnas");

        columnasInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnasInputActionPerformed(evt);
            }
        });

        inicializarBtn.setText("Inicializar Matriz");
        inicializarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicializarBtnActionPerformed(evt);
            }
        });

        operarBtn2.setText("Operar");
        operarBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operarBtn2ActionPerformed(evt);
            }
        });

        fraccionInput3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fraccionInput3ActionPerformed(evt);
            }
        });

        jLabel12.setText("a / b");

        jLabel13.setText("Rn       ->");

        jLabel14.setText("Rn");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Pasos ");

        jLabel10.setText("1. Ingresar el tama√±o de la matriz  en filas y columnas");

        jLabel11.setText("2. Hacer click en inicializar matriz");

        jLabel15.setText("3. Ingresar la matriz, separando cada termino con un espacio");

        jLabel16.setText("4. Hacer click en \"Guardar en Matriz\"");

        jLabel17.setText("5. Una vez generada la matriz, puedes empezar a modificarla ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(filasInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(columnasInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inicializarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(operarBtn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fraccInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(16, 16, 16))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(renglonInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(operacionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fraccionInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(renglonInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(renglonInput3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fraccionInput3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(renglonInput4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(renglonInput5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addComponent(operarBtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(filasInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(columnasInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inicializarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                    .addComponent(guardarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(fraccionInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renglonInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operacionInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fraccInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renglonInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renglonInput3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(operarBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(fraccionInput3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renglonInput4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renglonInput5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(operarBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fraccionInput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fraccionInput2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fraccionInput2ActionPerformed

    private void fraccInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fraccInput1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fraccInput1ActionPerformed

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        // TODO add your handling code here:
        String contenido = displayMatriz.getText();
        int iteradorVector = 0;
        
        ArrayList<Fraction> vector = new ArrayList<>();
        
        StringTokenizer st = new StringTokenizer(contenido, " \n");
        
        while(st.hasMoreTokens()) {
            String actual = st.nextToken();
            
            if (actual.contains("/")) {
                
                int indice = actual.indexOf("/");
                int inicio = 0;
                int termino = actual.length();
                
                int numerador = Integer.parseInt(actual.substring(inicio, indice));
                int denominador = Integer.parseInt(actual.substring(indice + 1, termino));
                        
                System.out.println("Fraccion -> " + actual);
                System.out.println("Numerador -> " + numerador);
                System.out.println("Denominador -> " + denominador);
                
                Fraction.getFraction(numerador, denominador);
                
                vector.add(Fraction.getFraction(numerador, denominador));

            } else {
                
                System.out.println("Entero -> " + actual);
                int numerador = Integer.parseInt(actual);
                int denominador = 1;
                
                Fraction.getFraction(numerador, denominador);
                vector.add(Fraction.getFraction(numerador, denominador));
                
            }
        }
        
//        System.out.println(vector.toString());
//        
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                matriz.get(i).add(vector.get(iteradorVector));
                iteradorVector++;
            }            
        }
//        
//        int filasMatriz = matriz.size();
//        
//        for (int i = 0; i < filasMatriz; i++) {
//            int columnasMatriz = matriz.get(i).size();
//            for (int j = 0; j < columnasMatriz; j++) {
//                Fraction fraccion = matriz.get(i).get(j);
//                System.out.println(fraccion);
//            }
//        }
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void columnasInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnasInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_columnasInputActionPerformed

    private void inicializarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicializarBtnActionPerformed
        // TODO add your handling code here:
        filas = Integer.parseInt(filasInput.getText());
        columnas = Integer.parseInt(columnasInput.getText());
        
        try {
            matriz.ensureCapacity(filas);
        } catch (NullPointerException e) {
            System.out.println("Exception thrown : " + e);
        }
        
        
        for (int i = 0; i < filas; i++) {
            matriz.add(new ArrayList());
            // matriz.get(i).add(Fraction.getFraction(1, 4));
        }
        
        // int filasMatriz = matriz.size();
        
//        for (int i = 0; i < filasMatriz; i++) {
//            int columnasMatriz = matriz.get(i).size();
//            for (int j = 0; j < columnasMatriz; j++) {
//                Fraction fraccion = matriz.get(i).get(j);
//                System.out.println(fraccion);
//            }
//        }
    }//GEN-LAST:event_inicializarBtnActionPerformed

    private void fraccionInput3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fraccionInput3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fraccionInput3ActionPerformed

    private void operarBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operarBtn1ActionPerformed
        // TODO add your handling code here:
        
        // Revisar que los input no esten vacios
        String fraccion1Input = fraccInput1.getText();
        String fraccion2Input = fraccionInput2.getText();
        
        String renglon1Input = renglonInput1.getText();        
        String renglon2Input = renglonInput2.getText();
        String renglon3Input = renglonInput3.getText();
        
        String signoInput = operacionInput.getText();
        
        Fraction fraccion1;
        Fraction fraccion2;

        if (!"".equals(fraccion1Input) && 
            !"".equals(fraccion2Input) && 
            !"".equals(renglon1Input) &&
            !"".equals(renglon2Input) && 
            !"".equals(renglon3Input) &&
            !"".equals(signoInput)) {
            
            if (fraccion1Input.contains("/")) {
                int indice = fraccion1Input.indexOf("/");
                int inicio = 0;
                int termino = fraccion1Input.length();
                int numerador = Integer.parseInt(fraccion1Input.substring(inicio, indice));
                int denominador = Integer.parseInt(fraccion1Input.substring(indice + 1, termino));
                fraccion1 = Fraction.getFraction(numerador, denominador);
                System.out.println(fraccion1);
            } else {
                int numerador = Integer.parseInt(fraccion1Input);
                int denominador = 1;
                fraccion1 = Fraction.getFraction(numerador, denominador);
            }
            
            if (fraccion2Input.contains("/")) {
                int indice = fraccion2Input.indexOf("/");
                int inicio = 0;
                int termino = fraccion2Input.length();
                int numerador = Integer.parseInt(fraccion2Input.substring(inicio, indice));
                int denominador = Integer.parseInt(fraccion2Input.substring(indice + 1, termino));
                fraccion2 = Fraction.getFraction(numerador, denominador);
                System.out.println(fraccion2);
            } else {
                int numerador = Integer.parseInt(fraccion2Input);
                int denominador = 1;
                fraccion2 = Fraction.getFraction(numerador, denominador);
            }
            
            int renglon1 = Integer.parseInt(renglon1Input) - 1;            
            int renglon2 = Integer.parseInt(renglon2Input) - 1;
            int renglon3 = Integer.parseInt(renglon3Input) - 1;

            // crear copia de los renglones
            ArrayList<Fraction> copiaRenglon1 = new ArrayList<>();            
            ArrayList<Fraction> copiaRenglon2 = new ArrayList<>();
            ArrayList<Fraction> resultadosParcial1 = new ArrayList<>();
            ArrayList<Fraction> resultadosParcial2 = new ArrayList<>();
            ArrayList<Fraction> resultados = new ArrayList<>();

            
            for (int i = 0; i < columnas; i++) {
                copiaRenglon1.add(matriz.get(renglon1).get(i));    
                copiaRenglon2.add(matriz.get(renglon2).get(i));
            }
            
            for (int i = 0; i < columnas; i++) {
                Fraction fraccionParcial1 = copiaRenglon1.get(i);
                Fraction resultadoParcial1 = fraccionParcial1.multiplyBy(fraccion1);
                resultadosParcial1.add(resultadoParcial1);   
                
                Fraction fraccionParcial2 = copiaRenglon2.get(i);
                Fraction resultadoParcial2 = fraccionParcial2.multiplyBy(fraccion2);
                resultadosParcial2.add(resultadoParcial2);
            }
            
            if ("+".equals(signoInput)) {
                for (int i = 0; i < columnas; i++ ) {
                    Fraction entrada1 = resultadosParcial1.get(i);
                    Fraction entrada2 = resultadosParcial2.get(i);
                    Fraction salida = entrada1.add(entrada2);
                    resultados.add(salida);
                }
            } else if ("-".equals(signoInput)) {
                for (int i = 0; i < columnas; i++ ) {
                    Fraction entrada1 = resultadosParcial1.get(i);
                    Fraction entrada2 = resultadosParcial2.get(i);
                    Fraction salida = entrada1.subtract(entrada2);
                    resultados.add(salida);
                }
            }
            
            matriz.set(renglon3, resultados);
        }
        System.out.println(matriz.toString());
    }//GEN-LAST:event_operarBtn1ActionPerformed

    private void operarBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operarBtn2ActionPerformed
        // TODO add your handling code here:
        
        // revisar que los inputs no esten vacios
        String fraccion1Input = fraccionInput3.getText();
        Fraction fraccion1;
        
        if (fraccion1Input.contains("/")) {
            int indice = fraccion1Input.indexOf("/");
            int inicio = 0;
            int termino = fraccion1Input.length();
            int numerador = Integer.parseInt(fraccion1Input.substring(inicio, indice));
            int denominador = Integer.parseInt(fraccion1Input.substring(indice + 1, termino));
            fraccion1 = Fraction.getFraction(numerador, denominador);
            System.out.println(fraccion1);
        } else {
            int numerador = Integer.parseInt(fraccion1Input);
            int denominador = 1;
            fraccion1 = Fraction.getFraction(numerador, denominador);
        }
        
        int renglon1 = Integer.parseInt(renglonInput4.getText()) - 1;
        int renglon2 = Integer.parseInt(renglonInput5.getText()) - 1;
        
        // crear copia del renglon que queremos modificar
        ArrayList<Fraction> copiaRenglon = new ArrayList<>();
        
        for (int i = 0; i < columnas; i++) {
            copiaRenglon.add(matriz.get(renglon1).get(i));
        }
        
        // creamos arrayList del rengon donde se va a guardar el resultado
        ArrayList<Fraction> resultados = new ArrayList<>(columnas);
        
        for (int i = 0; i < columnas; i++) {
            Fraction fraccion = copiaRenglon.get(i);
            Fraction resultado = fraccion.multiplyBy(fraccion1);
            resultados.add(resultado);
        }
        
        matriz.set(renglon2, resultados);
        
        System.out.println(matriz.toString());
    }//GEN-LAST:event_operarBtn2ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniMapleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniMapleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniMapleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniMapleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniMapleUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField columnasInput;
    private javax.swing.JTextArea displayMatriz;
    private javax.swing.JTextField filasInput;
    private javax.swing.JTextField fraccInput1;
    private javax.swing.JTextField fraccionInput2;
    private javax.swing.JTextField fraccionInput3;
    private javax.swing.JButton guardarBtn;
    private javax.swing.JToggleButton inicializarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField operacionInput;
    private javax.swing.JButton operarBtn1;
    private javax.swing.JButton operarBtn2;
    private javax.swing.JTextField renglonInput1;
    private javax.swing.JTextField renglonInput2;
    private javax.swing.JTextField renglonInput3;
    private javax.swing.JTextField renglonInput4;
    private javax.swing.JTextField renglonInput5;
    // End of variables declaration//GEN-END:variables
}
